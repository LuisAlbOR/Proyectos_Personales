package vista.usuario;

import controlador.usuario.Ctrl_Usuario_Eliminar;
import java.awt.Dimension;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.usuario.Usuario;
import modelo.usuario.Usuario_DAOImp_Eliminar;
import modelo.usuario.usuarioDAO_Eliminar;

/**
 *
 * @author Guicho
 */
public class InterEliminarUsuario extends javax.swing.JInternalFrame {



    public InterEliminarUsuario() {
        initComponents();
        this.setSize(new Dimension(900, 500));
        this.setTitle("Gestionar usuarios");
        //Cargar tabla
        this.CargarTablaUsuarios();

        //insertar imagen en nuestro JLabel
        ImageIcon wallpaper = new ImageIcon("src/img/fondo3.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(900, 500, WIDTH));
        jLabel_wallpaper.setIcon(icono);
        this.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_usuario = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_eliminar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar Usuario");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(195, 139, 11));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_usuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_usuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_usuarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_usuario);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 710, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 730, 270));

        jPanel2.setBackground(new java.awt.Color(69, 95, 95));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_eliminar.setBackground(new java.awt.Color(255, 51, 51));
        jButton_eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 50, 130, 270));

        jPanel3.setBackground(new java.awt.Color(89, 42, 67));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 870, 100));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed
        usuarioDAO_Eliminar usuarioDAO_Eliminar = new Usuario_DAOImp_Eliminar();
        Ctrl_Usuario_Eliminar ctrl_Usuario_Eliminar = new Ctrl_Usuario_Eliminar(usuarioDAO_Eliminar);
        int idUsuario = (int) jTable_usuario.getValueAt(jTable_usuario.getSelectedRow(), 0);//sE OBTIENE EL ID DEL USUARIO 

        int opcion = JOptionPane.showConfirmDialog(null, "¿Estás seguro que desea eliminar al usuario?", "Confirmación de eliminación", JOptionPane.YES_NO_OPTION);
        if(opcion == JOptionPane.YES_OPTION){
            if (!ctrl_Usuario_Eliminar.eliminar(idUsuario)) {
                JOptionPane.showMessageDialog(null, "Usuario eliminado");
                this.CargarTablaUsuarios();

            } else {
                JOptionPane.showMessageDialog(null, "Error al eliminar un Usuario");
            }
        }
    }//GEN-LAST:event_jButton_eliminarActionPerformed

    private void jTable_usuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_usuarioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable_usuarioMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_usuario;
    // End of variables declaration//GEN-END:variables

    //Método para limpiar campos
    //Método para mostrar todos los usuario registrados
    /*
    private void CargarTablaUsuarios() {
        Connection con = Conexion.Conexion();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select * from tb_usuarios";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterEliminarUsuario.jTable_usuario = new JTable(model);
            InterEliminarUsuario.jScrollPane1.setViewportView(InterEliminarUsuario.jTable_usuario);

            model.addColumn("N°");//ID
            model.addColumn("nombre");
            model.addColumn("apellido");
            model.addColumn("usuario");
            model.addColumn("password");
            model.addColumn("telefono");
            model.addColumn("estado");

            while (rs.next()) {
                Object fila[] = new Object[7];
                for (int i = 0; i < 7; i++) {

                    fila[i] = rs.getObject(i + 1);

                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla usuarios: " + e);
        }
        //evento para obtener campo al cual el usuario da click
        //y obtener la interfaz que mostrara la informacion general
        jTable_usuario.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_usuario.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    idUsuario = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosUsuarioSeleccionado(idUsuario);//metodo
                }
            }
        });
    }
     */
 /*
     * **************************************************
     * Metodo que envia datos seleccionados
     * **************************************************
     */
 /*
    private void EnviarDatosUsuarioSeleccionado(int idUsuario) {
        try {
            try ( Connection con = Conexion.Conexion()) {

                PreparedStatement pst = con.prepareStatement(
                        "select * from tb_usuarios where idUsuario = '" + idUsuario + "'");
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {
                    txt_nombre.setText(rs.getString("nombre"));
                    txt_apellido.setText(rs.getString("apellido"));
                    txt_usuario.setText(rs.getString("usuario"));
                    txt_password.setText(rs.getString("password"));
                    txt_telefono.setText(rs.getString("telefono"));
                }
            }
        } catch (SQLException e) {
            System.out.println("Error al seleccionar usuario: " + e);
        }
    }*/
    private void CargarTablaUsuarios() {
        DefaultTableModel model = new DefaultTableModel();
        InterEliminarUsuario.jTable_usuario = new JTable(model);
        InterEliminarUsuario.jScrollPane1.setViewportView(InterEliminarUsuario.jTable_usuario);
        model.addColumn("N°");//ID
        model.addColumn("nombre");
        model.addColumn("apellido");
        model.addColumn("usuario");
        model.addColumn("password");
        model.addColumn("telefono");
        model.addColumn("estado");
        
        usuarioDAO_Eliminar usuarioDAO_Eliminar = new Usuario_DAOImp_Eliminar();
        Ctrl_Usuario_Eliminar ctrl_Usuario_Eliminar = new Ctrl_Usuario_Eliminar(usuarioDAO_Eliminar);
        List<Usuario> usuarios = ctrl_Usuario_Eliminar.obtenerUsuarios();
        for (Usuario usuario : usuarios) {
            Object[] fila = {
                usuario.getIdUsuario(),
                usuario.getNombre(),
                usuario.getApellido(),
                usuario.getUsuario(),
                usuario.getPassword(),
                usuario.getTelefono(),
                usuario.getEstado()
            };
            model.addRow(fila);
        }
        /*
        jTable_usuario.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_usuario.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    idUsuario = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosUsuarioSeleccionado(idUsuario);//metodo
                }
            }
        });*/

    }

}
